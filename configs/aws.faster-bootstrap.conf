
#
# Copyright (c) 2016 Cloudera, Inc. All rights reserved.
#

#
# Simple AWS Cloudera Altus Director configuration file demonstrating Faster Bootstrap
# capability for Cloudera Manager (based on aws.simple.conf)
#
# The configuration properties for CLOUDERA_MANAGER are responsible for enabling
# Faster Bootstrap
#
# Faster Bootstrap requires Cloudera Manager and CDH 5.9 or higher
#

#
# Cluster name
#

name: C5-FASTER-BOOTSTRAP-AWS

#
# Cloud provider configuration (credentials, region or zone and optional default image)
#

provider {
    type: aws

    #
    # Get AWS credentials from the OS environment
    # See http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
    #
    # If specifying the access keys directly and not through variables, make sure to enclose
    # them in double quotes.
    #
    # Leave the accessKeyId and secretAccessKey fields blank when running on an instance
    # launched with an IAM role.

    # accessKeyId: ${?AWS_ACCESS_KEY_ID}
    # secretAccessKey: ${?AWS_SECRET_ACCESS_KEY}

    #
    # ID of the Amazon AWS region to use
    # See: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
    #

    region: region-REPLACE-ME

    #
    # Region endpoint (if you are using one of the Gov. regions)
    #

    # regionEndpoint: ec2.us-gov-west-1.amazonaws.com

    #
    # ID of the VPC subnet
    # See: http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html
    #

    subnetId: subnet-REPLACE-ME

    #
    # Comma separated list of security group IDs
    # See: http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html
    #

    securityGroupsIds: sg-REPLACE-ME

    #
    # A prefix that Cloudera Altus Director should use when naming the instances (this is not part of the hostname)
    #

    instanceNamePrefix: cloudera-director

    #
    # Specify a size for the root volume (in GBs). Cloudera Altus Director will automatically expand the
    # filesystem so that you can use all the available disk space for your application
    # See: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/storage_expand_partition.html
    #

    # rootVolumeSizeGB: 100 # defaults to 50 GB if not specified

    #
    # Specify the type of the EBS volume used for the root partition. Defaults to gp2
    # See: http://aws.amazon.com/ebs/details/
    #

    # rootVolumeType: gp2 # OR standard (for EBS magnetic)

    #
    # Whether to associate a public IP address with instances or not. If this is false
    # we expect instances to be able to access the internet using a NAT instance
    #
    # Currently the only way to get optimal S3 data transfer performance is to assign
    # public IP addresses to your instances and not use NAT (public subnet type of setup)
    #
    # See: http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-ip-addressing.html
    #

    # associatePublicIpAddresses: true

}

#
# SSH credentials to use to connect to the instances
#

ssh {
    username: ec2-user # for RHEL image
    privateKey: privateKey-REPLACE-ME # with an absolute path to .pem file
}

#
# A list of instance types to use for group of nodes or management services
#

instances {

    m42x {
        type: m4.2xlarge   # requires an HVM AMI

        #
        # Amazon Machine Image (AMI)
        #
        # See: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html
        # Compatibility matrix: https://aws.amazon.com/amazon-linux-ami/instance-type-matrix/
        #
        # Red Hat Enterprise Linux AMI IDs: http://aws.amazon.com/partners/redhat/
        # We support Red Hat Enterprise Linux 6.4 (64bit) 64bit PV or HVM
        #

        image: ami-HVM-REPLACE-ME

        #
        # Name of the IAM Role to use for this instance type
        # http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html
        #

        # iamProfileName: iam-profile-REPLACE-ME

        tags {
            owner: ${?USER}
        }

        bootstrapScripts: [ """#!/bin/sh

# This is an embedded bootstrap script that runs as root and can be used to customize
# the instances immediately after boot and before any other Cloudera Altus Director action

# Use exit code 0 to indicate success
# Use exit code 91 indicate an unretryable failure
# Cloudera Altus Director will automatically retry script execution for all other exit codes

echo 'Hello World!'
exit 0

""" ]

        #
        # Flag indicating whether to normalize the instance. Not setting normalization here implies that your
        # bootstrap script will take care of normalization. This is an advanced configuration that will require
        # assistance from Cloudera support.
        #
        # Defaults to true
        #

        # normalizeInstance: true

        # Configuration allowing for granular control over the normalization steps of an instance.
        # By default, all of these steps are on. This is an advanced configuration. None of these steps
        # will run if normalizeInstance is set to false.
        #
        # Normalization includes:
        #   prewarming the parcel directory
        #   downloading, installing, and adjusting packages
        #   minimizing swappiness
        #   increasing the maximun number of open files
        #   resizing the root partition
        #   mounting ephemeral disks

        # normalizationConfig {
        #   prewarmDirectory: false
        #   installPackages: true
        #   miscellaneousServiceAdjustment: false
        #   minimizeSwappiness: true
        #   increaseMaxNumberOfOpenFiles: false
        #   resizeRootPartition: true
        #   mountAllUnmountedDisks: false
        # }

    }

    d2x {
        type: d2.xlarge
        image: ami-HVM-REPLACE-ME

        tags {
            owner: ${?USER}
        }
    }
}

#
# Configuration for Cloudera Manager. Cloudera Altus Director can use an existing instance
# or bootstrap everything from scratch for a new cluster
#

cloudera-manager {

    instance: ${instances.m42x} {
        tags {
            application: "Cloudera Manager 5"
        }
    }

    #
    # Set the configuration properties that enable Faster Bootstrap
    # Both of these properties must be set to true
    #

    configs {
        CLOUDERA_MANAGER {
            enable_faster_bootstrap: true
            # Include enable_fast_dir_create for Cloudera Manager 5.9.0 only
            # enable_fast_dir_create: true
        }
    }

    #
    # Automatically activate 60-Day Cloudera Enterprise Trial
    #

    enableEnterpriseTrial: true

    # Optional custom service descriptors for external parcels
    # csds: [
    #   "https://customServiceDescriptorUrls",
    # ]
}

#
# Cluster description
#

cluster {

    # List the products and their versions that need to be installed.
    # These products must have a corresponding parcel in the parcelRepositories
    # configured above. The specified version will be used to find a suitable
    # parcel. Specifying a version that points to more than one parcel among
    # those available will result in a configuration error. Specify more granular
    # versions to avoid conflicts.

    products {
      CDH: 5
    }

    #
    # Faster Bootstrap does not work when IMPALA or KAFKA are included as
    # services
    #

    services: [HDFS, YARN, ZOOKEEPER, HBASE, HIVE]

    nodes {
        count: 5
        instance: ${instances.d2x}
    }

    postCreateScripts: ["""#!/bin/sh

# This is an embedded post creation script script that runs as root and can be used to
# customize the cluster after it has been created.

# Use exit code 0 to indicate success
# Use exit code 91 indicate an unretryable failure
# Cloudera Altus Director will automatically retry script execution for all other exit codes

echo 'Hello World!'
exit 0
    """,
    """#!/bin/sh

# Additionally, multiple post creation scripts can be supplied.  They will run in the
# order they are listed here.

echo 'Hello again!'
exit 0
    """]
}
