#
# Copyright (c) 2015 Cloudera, Inc. All rights reserved.
#

#
# A non-exhaustive list of server-wide configuration parameters with defaults.
#

#
# Server Configurations
#

# The port on which the Cloudera Altus Director server will run
# server.port: 7189

#
# Cluster Bootstrap Process Configurations
#

# On how many instances should Cloudera Altus Director act in parallel during bootstrap
# lp.bootstrap.parallelBatchSize: 20

# How many times to try to install Cloudera Manager agents on new instances
# lp.bootstrap.agents.maxNumberOfInstallAttempts: 50 # -1 is unlimited

# How long to wait for the initial heartbeat of a Cloudera Manager agent
# lp.bootstrap.agents.initialHeartbeatTimeoutInSeconds: 1800 # -1 is unlimited

# How long to wait until timing out a host install command
# lp.bootstrap.agents.hostInstallTimeoutInSeconds: 900 # 15 minutes

# Cloudera Altus Director invokes the Cloudera Manager Host Install command to install the agents on
# new instances. This command is invoked with the instance hostname when using autoTLS. By default,
# Cloudera Altus Director prefers to use the fqdn retrieved from the instance as opposed to the hostname
# retrieved from the cloud provider. Setting tlsPreferFqdn to 'false' will change the preference
# order to prefer the hostname retrieved from the cloud provider.
# lp.bootstrap.agents.tlsPreferFqdn: true

# How long to wait for an aborted host install command to enter an inactive state
# lp.bootstrap.agents.abortTimeoutInSeconds: 60 # 1 minute

# Maximum throughput during parcel distribution
# lp.bootstrap.parcels.distributeRateLimitKBs: 256000

# Maximum number of concurrent uploads during parcel distribution
# lp.bootstrap.parcels.distributeMaxConcurrentUploads: 5

# How long to wait for a cluster post-creation script to be run
# lp.bootstrap.postcreate.cluster.scriptTimeoutInMilliseconds: 3600000

# Whether to fail cluster bootstrap if a cluster post-creation scripts returns a nonzero exit code
# lp.bootstrap.postcreate.cluster.failOnNonZeroScriptExitCode: false

# The amount of time to wait for parcel products to be visible in CM after updating repositories
# lp.bootstrap.parcelProducts.waitTimeoutMinutes : 10
# lp.bootstrap.parcelProducts.waitIntervalSeconds : 30

# What Java package to install on a new Cloudera Manager instance when the
# AUTO Java installation strategy is in use (which is the default choice),
# or on all instances when the DIRECTOR_MANAGED Java installation strategy is
# in use, based on matching regular expressions against the version of Cloudera
# Manager detected
# In this default example, Java 8 is chosen for Cloudera Manager 6.x and
# Java 7 is chosen for Cloudera Manager 5.x
# lp.bootstrap.packages.cmJavaPackages[0]: "6\\..*=oracle-j2sdk1.8"
# lp.bootstrap.packages.cmJavaPackages[1]: "5\\..*=oracle-j2sdk1.7"

# What Java package to install by default for the cases above when the version
# of Cloudera Manager cannot be determined, or the version does not match
# successfully against any of the regular expressions in cmJavaPackages
# lp.bootstrap.packages.defaultCmJavaPackage: oracle-j2sdk1.8

# What URL to retrieve the MySQL JDBC connector from if it's not present on a host
# lp.bootstrap.installMysql.connectorUrl: https://archive.cloudera.com/thirdparty/mysql-connector/5.1.46/mysql-connector-java-5.1.46.tar.gz

# Where to put the MySQL JDBC connector on each host
# lp.bootstrap.installMysql.outputPath: /usr/share/java/mysql-connector-java.jar

#
# Cluster Update Process Configurations
#

# On how many instances should Cloudera Altus Director act in parallel during update
# lp.update.parallelBatchSize: 20

# The sleep time after adding the instance to the CM cluster. Increase
# this to give more time for parcel distribution/activation to occur
# for new hosts added during cluster during update.

# lp.update.sleepTimeForAddInstanceSeconds: 10

#
# Cluster Host Decommission Process Configurations
#

# How long to wait for Cloudera Manager to decommission a host
# lp.hostDecommission.timeoutInSeconds: 1800

# How long to wait when aborting a stalled host decommission
# lp.hostDecommission.abortTimeoutInSeconds: 60

#
# Deployment Terminate Process Configurations
#

# How long to wait to check connectivity to Cloudera Manager before trying to
# stop it
# lp.cleanup.cm.connectionCheckTimeoutInMs: 5000

# How long to wait for Cloudera Manager to stop
# lp.cleanup.cm.stopWaitTimeInMs: 300000

# How long to wait between polls to check if Cloudera Manager has stopped
# lp.cleanup.cm.timeBetweenConnectionRetriesInMs: 10000

# On how many clusters should Cloudera Altus Director wait for termination in parallel
# lp.terminate.deployment.parallelBatchSize: 20

# How long to wait for a cluster to terminate before terminating its deployment
# lp.terminate.deployment.clusterTerminationWaitTimeInMs: 600000


#
# Script Execution Configurations
#

# How many retries for each script (e.g., bootstrap, post-create, pre-terminate)
# lp.scriptExecution.numberOfRetries: 5

# Script exit code used to indicate that script execution is not retryable. Choose a value in range 64-113
# lp.scriptExecution.unretryableExitCode: 91

#
# Restart Cluster job configuration
#

# A number of these configuration options will affect how Director determines if a cluster has settled.
# A settled cluster is a cluster that has no active commands running on it and has appropriately marked
# services as STALE.

# lp.update.restartCluster.numberOfActiveCommandChecks: 5
# lp.update.restartCluster.numberOfStaleServicesChecks: 5
# lp.update.restartCluster.sleepBetweenClusterSettledCheckInSeconds: 5
# lp.update.restartCluster.settledClusterTimeoutInSeconds: 600
# lp.update.restartCluster.sleepAfterFailureInSeconds: 10
# lp.update.restartCluster.numberOfRetries: 5

#
# Rolling Restart arguments
#

# lp.update.restartCluster.rolling.slaveBatchSize: 1
# lp.update.restartCluster.rolling.sleepSeconds: 0
# lp.update.restartCluster.rolling.slaveFailCountThreshold: 0

#
# Redeploy Client Config job configuration
#

# lp.update.redeployClientConfigs.sleepAfterFailureInSeconds: 10
# lp.update.redeployClientConfigs.numberOfRetries: 5
# lp.update.redeployClientConfigs.abortTimeoutInSeconds: 60

#
# Background Tasks Configurations
#

# Whether and how often terminated entities are removed from the database (in milliseconds)
# lp.task.evictionEnabled: true
# lp.task.evictionRate: 600000

# Size of the threadpool used for executing tasks
# lp.task.threadPoolSize: 10

#
# Generic Cloud Related Configurations
#

# lp.cloud.instances.allocate.timeoutInMinutes: 20
# lp.cloud.instances.allocate.parallelBatchSize: 20
# lp.cloud.instances.allocate.numberOfRetriesOnConnectionError: 3
# lp.cloud.instances.allocate.timeBetweenConnectionRetriesInSeconds: 1
# lp.cloud.instances.terminate.timeoutInMinutes: 20

#
# Pipeline Service Configurations (used to execute internal workflows)
#

# lp.pipeline.retry.maxNumberOfAttempts: 5
# lp.pipeline.retry.minWaitBetweenAttempts: 10
# lp.pipeline.retry.maxWaitBetweenAttempts: 60

#
# Pipeline purge configurations. Old pipelines will be purged periodically.
#

# lp.pipelines.purge.enabled: true

#
# Health cache configurations (controls how often health caching is attempted)
#

# The time in between health polls.  Set to a nonpositive number to disable health
# polling.
# lp.cache.health.pollingRateInMilliseconds: 30000

# The number of threads that can be used to execute health caching
# lp.cache.health.numberOfHealthCacheExecutorThreads: 5

# The number to multiply the polling rate by to determine if a health report
# has gone stale. With a multiplier of 2 and a polling rate of 30000ms, it
# if a health report has not been updated for 60000s, it will expire and
# be marked stale.
# lp.cache.health.expirationMultiplier: 2

#
# Notification cache configurations (controls how often notification caching is attempted)
#

# The time in between notification polls.  Set to a nonpositive number to disable notification
# polling.
# lp.cache.notification.pollingRateInMilliseconds: 30000

# The number of threads that can be used to execute notification caching
# lp.cache.notification.numberOfCacheExecutorThreads: 3

# The number to multiply the polling rate by to determine how long a notification cache entry
# should be kept in cache before it expires. With a multiplier of 3000 and a polling rate of
# 30000ms(30 seconds), the cache entry will expire after 90,000 seconds (1,500 minutes) and
# evicted from cache.
# lp.cache.notification.expirationMultiplier: 3000

#
# SSH Client Configurations
#

# lp.ssh.heartbeatIntervalInSeconds: 45
# lp.ssh.connectTimeoutInSeconds: 30
# lp.ssh.readTimeoutInSeconds: 30
# lp.ssh.endpointCacheExpirationInSeconds: 600

#
# SSH Client Pool Configurations
#

# The cap on the number of object instances managed by the pool per endpoint.
# lp.ssh.client.pool.maxActive: 20
# The action to take when an item is requested but the pool is exhausted,
# it must be one of WHEN_EXHAUSTED_BLOCK(0), WHEN_EXHAUSTED_FAIL(1), or WHEN_EXHAUSTED_GROW(2).
# lp.ssh.client.pool.whenExhaustedAction: 2
# The minimum amount of time an object may sit idle in the pool before it is eligible for eviction.
# lp.ssh.client.pool.minEvictableIdleTimeMillis: 600000
# The number of milliseconds to sleep between eviction runs. When non-positive, eviction is disabled.
# lp.ssh.client.pool.timeBetweenEvictionRunsMillis: 300000
# The max number of objects to examine during each run of the eviction.
# When negative, ceil(getNumIdle())/abs(numTestsPerEvictionRun) tests will be run.
# lp.ssh.client.pool.numTestsPerEvictionRun: -1

#
# SSH background command
#

# The prefix to use for files created while running jobs in the background. This can be reconfigured
# to point to a different directory if security policies require it.
# lp.ssh.background.backgroundFilePrefix: /tmp/cloudera-director-script-runner-

#
# Debug Configuration for API Commands
#

# Collect Cloudera Manager diagnostic data on unrecoverable failures.
# lp.debug.collectDiagnosticDataOnFailure: true

# Download Cloudera Manager diagnostic data if it has been collected.
# lp.debug.downloadDiagnosticData: true

# Directory where diagnostic data is downloaded to.
# (Actual default is value of java.io.tmpdir Java system property.)
# lp.debug.diagnosticDataDownloadDirectory: /tmp

# Create the diagnostic data download directory if not present.
# lp.debug.createDiagnosticDataDownloadDirectory: true

# Dump Cloudera Manager log entries in the Cloudera Altus Director log files on unrecoverable
# failures.
# lp.debug.dumpClouderaManagerLogsOnFailure: false

# Dump log entries and stdout / stderr in the Cloudera Altus Director log files for all
# cluster services on unrecoverable failures.
# lp.debug.dumpClusterLogsOnFailure: false

#
# SSL settings
#

# Fill out the store location to enable HTTPS
# server.ssl.key-store:
# server.ssl.key-store-password:
# server.ssl.key-store-type:

# Pick out a particular alias within the keystore (optional)
# server.ssl.key-alias:
# server.ssl.key-password:

# Whether to enable or disable TLS support (optional, default true)
# Use this flag to easily disable TLS without removing other server.ssl properties. It is an error
# to set this flag to true without specifying server.ssl.key-store.
# server.ssl.enabled: true

# SSL protocol (preferred)
# server.ssl.protocol: TLS

# SSL enabled protocols
# Cloudera Altus Director supports TLSv1.2 by default. TLSv1 or TLSv1.1 can be explicitly enabled but may
# not be supported by future versions of Cloudera Altus Director.
# server.ssl.enabled-protocols:

# SSL ciphers (comma delimited list)
# Ciphers matching the regex "^.*_(MD5|SHA|SHA1)$" are disabled by default due to potential
# security vulnerabilities. These ciphers may be explicitly enabled but may not be supported
# by future versions of Cloudera Altus Director.
# server.ssl.ciphers:

#
# AWS client settings
#

# lp.aws.client.configuration.maxErrorRetries: 7
# lp.aws.client.configuration.connectionTimeoutInMilliseconds: 10000

#
# HTTP Proxy Settings
#

# Fill these out to route HTTP(S) network traffic through an HTTP(S) proxy
# lp.proxy.http.scheme:
# lp.proxy.http.host:
# lp.proxy.http.port:
# lp.proxy.http.username:
# lp.proxy.http.password:
# lp.proxy.http.domain:
# lp.proxy.http.workstation:
# lp.proxy.http.preemptiveBasicProxyAuth: false

#
# HTTP Timeout Settings
#

# Timeout for requesting a connection from the connection manager
# lp.http.timeout.connectionRequestTimeoutMs: 5000
# Timeout for establishing a connection
# lp.http.timeout.connectionTimeoutMs: 5000
# Timeout for socket activity over an established connection
# lp.http.timeout.socketTimeoutMs: 10000

# A comma delimited list of hosts or domain extensions that are matched against domains to determine whether
# a proxy should be used. If one of the domains described by the proxy bypass host list is accessed
# by Director, the proxy will be bypassed.
# lp.proxy.http.proxyBypassHosts: www.example.com, .cloudera.com

#
# Security configurations
#

# lp.security.enabled: true

# LDAP authentication and authorization through group mapping
# (Active Directory is described after this set of properties)
# lp.security.userSource: LDAP
# lp.security.ldapConfig.url: ldap://host:port/
# lp.security.ldapConfig.bindDn: cn=ldapadm,dc=domain,dc=example
# lp.security.ldapConfig.bindPw: password
# lp.security.ldapConfig.userSearchBase: ou=People,dc=domain,dc=example
# lp.security.ldapConfig.userSearchFilter: (uid={0})
# lp.security.ldapConfig.ldapDnPattern: uid={0},ou=People,dc=domain,dc=example
# lp.security.ldapConfig.groupSearchBase: ou=Groups,dc=domain,dc=example
# lp.security.ldapConfig.groupSearchFilter: (uniqueMember={0})
# lp.security.ldapConfig.groupRoleAttribute: cn

# Active Directory authentication and authorization through group mapping
# lp.security.userSource: LDAP
# lp.security.ldapConfig.url: ldap://host:port/
# lp.security.ldapConfig.bindDn: cn=Administrator,dc=domain,dc=example
# lp.security.ldapConfig.bindPw: password
# lp.security.ldapConfig.userSearchBase: ou=People,dc=domain,dc=example
# lp.security.ldapConfig.userSearchFilter: (sAMAccountName={0})
# lp.security.ldapConfig.groupSearchBase: ou=Groups,dc=domain,dc=example
# lp.security.ldapConfig.groupSearchFilter: (member={0})
# lp.security.ldapConfig.groupRoleAttribute: cn
# lp.security.ldapConfig.activeDirectory.domain: DOMAIN.EXAMPLE
# lp.security.ldapConfig.activeDirectory.postAuthnUserSearchFilter: (&(objectClass=user)(userPrincipalName={0}))
# Use the following if, in AD, userPrincipalName != sAMAccountName@domain
# lp.security.ldapConfig.activeDirectory.postAuthnUserSearchFilter: (&(objectClass=user)(sAMAccountName={1}))
# lp.security.ldapConfig.activeDirectory.roleMapping.DirectorAdminGroupCn: ADMIN
# lp.security.ldapConfig.activeDirectory.roleMapping.DirectorReadOnlyGroupCn: READONLY
# ... include as many roleMapping properties as desired

# Default Guest user (readonly access)
# lp.security.bootstrap.guest.name: guest
# lp.security.bootstrap.guest.password: guest
# lp.security.bootstrap.guest.enabled: true
# lp.security.bootstrap.guest.roles: READONLY

# Default Admin user with unrestricted access
# lp.security.bootstrap.admin.name: admin
# lp.security.bootstrap.admin.password: admin
# lp.security.bootstrap.admin.enabled: true
# lp.security.bootstrap.admin.roles: ADMIN,READONLY

# Database encryption
# Available ciphers: desede (recommended), passthrough, transitional
# lp.encryption.twoWayCipher: desede
# For desede, provide the 24-byte base 64 encoded key; do not use this default
# lp.encryption.twoWayCipherConfig: ZGVmYXVsdGRpcmVjdG9yZGVzZWRla2V5

#
# Jasypt configurations for encrypted configuration properties
# https://github.com/ulisesbocchio/jasypt-spring-boot#encryption-configuration
# Stronger PBE algorithms require unlimited strength JCE policy files and/or additional security providers
# Algorithms involving HMAC fail because Jasypt does not preserve the IV
#

#jasypt.encryptor.algorithm=PBEWITHSHA1ANDDESEDE
#jasypt.encryptor.keyObtentionIterations=10000
#jasypt.encryptor.poolSize=1
#jasypt.encryptor.providerName=SunJCE
#jasypt.encryptor.saltGeneratorClassname=org.jasypt.salt.RandomSaltGenerator
#jasypt.encryptor.stringOutputType=base64

#
# Web interface configuration
#

# Switch between embedded and online documentation
# lp.webapp.documentationType: ONLINE # or EMBEDDED

# Optional anonymous usage data collection (defaults to true)
# lp.webapp.anonymousUsageDataAllowed: true

#
# Configurations for database connectivity.
#

# Optional database type (h2 or mysql) (defaults to h2)
# lp.database.type: mysql

# Optional database user name (defaults to "sa" on H2 and "director" on MySQL)
# lp.database.username:

# Optional database password (defaults to "sa" on H2 and "password" on MySQL)
# lp.database.password:

# Optional database path (only for H2, defaults to "./state")
# lp.database.path:

# Optional database host (only for MySQL, defaults to "localhost")
# lp.database.host:

# Optional database port (only for MySQL, defaults to 3306)
# lp.database.port:

# Optional database (schema) name (only for MySQL, defaults to "director")
# lp.database.name:

# Optional database URL (default generated from the database type and other properties)
# lp.database.url:

#
# Metrics settings
#

# Metrics reporting enable/disable flag
# lp.metrics.enabled: false

# Where the metrics CSV files will be dumped to
# lp.metrics.location: logs/metrics

# What time of TimeUnit to measure durations with
# lp.metrics.durationUnits: MILLISECONDS

# What time of TimeUnit to measure rates with
# lp.metrics.rateUnits: SECONDS

# How often to report in minutes
# lp.metrics.reportingRate:

#
# Access logging
#

# Access logging enable/disable flag
# logback.access.enabled: true

#
# Cloudera Manager miscellaneous configuration
#

# A qualifier to be appended to the end of the CREATOR_TAG reported to Cloudera Manager
# By default this is also used for the user agent used to retrieve parcel manifest files

# lp.cloudera.manager.configuration.creatorTagQualifier:

#
# Advanced server debugging configurations
#

# Enable or disable JMX for the server JVM (defaults to false)
# spring.jmx.enabled: false

# Enable management endpoints (via Spring Boot Actuator) (disabled by default)
# management.server.port: 8081

# Enable CRaSH shell (http://www.crashub.org/) (disabled by default)

# management.shell.ssh.enabled: true
# management.shell.ssh.port: 2000

# By default, CRaSH will use Spring Security for log in credentials.
# If these lines are uncommented, the CRaSH shell will circumvent Spring security
# and use the specified login and password.
# If passwords need to be changed, it's a good idea to uncomment this block.

# management.shell.auth.type: simple
# management.shell.auth.simple.user.name: director
# management.shell.auth.simple.user.password: director

#
# Usage reporting configurations
#

# lp.usage.dispatch.remote.client.proxyUri:
# lp.usage.dispatch.remote.client.proxyUsername:
# lp.usage.dispatch.remote.client.proxyPassword:

#
# Usage reporting notification configurations
#

# lp.usage.reporting.notification.criticalThresholdQueueSize: 10
# lp.usage.reporting.notification.warningThresholdQueueSize: 5

#
# Usage collection service heartbeat notification configurations
#

# lp.usage.heartbeat.notification.criticalAttempts: 10
# lp.usage.heartbeat.notification.warningAttempts: 5

#
# Amount of time between cluster/deployment model refreshes
#

# lp.refreshModels.delayBetweenRefreshesInMilliseconds: 300000

#
# Global switches for normalization steps. These switches will be used if an instance
# template level normalization configuration is not provided.
#

# Turning off all normalization steps
# lp.normalization.required: true

# Warming up parcel directory
# lp.normalization.prewarmDirectoryRequired: true

# Installing ntp, curl, nscd, python if not exists, and gdisk if hardware
# assisted virtualization
# lp.normalization.installPackagesRequired: true

# If the distro is Redhat compatible, it will set SELinux to permissive
# mode and configure it to be fully disabled on the next reboot. Also it will
# disable cups, postfix, iptables, ip6tables, transparent
# hugepages, IPv6, tuned, firewalld, and start/enable chronyd or ntpd, nscd
# lp.normalization.miscellaneousServiceAdjustmentRequired: true

# Minimizing the amount of swapping without disabling it entirely
# lp.normalization.minimizeSwappinessRequired: true

# Adjusting user open file limit to 32768
# lp.normalization.increaseMaxNumberOfOpenFilesRequired: true

# Resizing the root partition if usage is below 95% of block device size
# lp.normalization.resizeRootPartitionRequired: true

# Mounting all unmounted block device(s) to /data0, /data1, ...
# lp.normalization.mountAllUnmountedDisksRequired: true
