#
# (c) Copyright 2015 Cloudera, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Simple AWS Cloudera Altus Director configuration file with manual role assignments
# that minimally satisfies the requirements for running the enableHdfsHa.groovy or
# enable-hdfs-ha.py scripts.
#

#
# Cluster name
#

name: Enable-HA-Minimal

#
# Cloud provider configuration (credentials, region or zone and optional default image)
#

provider {
    type: aws

    #
    # Get AWS credentials from the OS environment
    # See http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
    #
    # If specifying the access keys directly and not through variables, make sure to enclose
    # them in double quotes.

    accessKeyId: ${?AWS_ACCESS_KEY_ID}
    secretAccessKey: ${?AWS_SECRET_ACCESS_KEY}

    #
    # ID of the Amazon AWS region to use
    # See: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
    #

    region: us-east-1

    #
    # Region endpoint (if you are using one of the Gov. regions)
    #

    # regionEndpoint: ec2.us-gov-west-1.amazonaws.com

    #
    # ID of the VPC subnet
    # See: http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html
    #

    subnetId: subnet-REPLACE-ME

    #
    # Comma separated list of security group IDs
    # See: http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html
    #

    securityGroupsIds: sg-REPLACE-ME

    #
    # A prefix that Cloudera Altus Director should use when naming the instances (this is not part of the hostname)
    #

    instanceNamePrefix: cd-ha
}

#
# SSH credentials to use to connect to the instances
#

ssh {
    username: ec2-user # for RHEL image
    privateKey: REPLACE-ME # with an absolute path to .pem file
}

#
# A list of instance types to use for group of nodes or management services
#

instances {
    m42x {
        type: m4.2xlarge

        #
        # Amazon Machine Image (AMI)
        #
        # See: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html
        # Compatibility matrix: https://aws.amazon.com/amazon-linux-ami/instance-type-matrix/
        #
        # Red Hat Enterprise Linux AMI IDs: http://aws.amazon.com/partners/redhat/
        # We support Red Hat Enterprise Linux 6.4 (64bit) 64bit PV or HVM
        #

        image: ami-REPLACE-ME

        #
        # Name of the IAM Role to use for this instance type
        # http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html
        #

        # iamProfileName: REPLACE-ME

        tags {
            owner: ${?USER}
        }

        bootstrapScripts: [ """#!/bin/sh

# This is an embedded bootstrap script that runs as root and can be used to customize
# the instances immediately after boot and before any other Cloudera Altus Director action

# If the exit code is not zero Cloudera Altus Director will automatically retry

echo 'Hello World!'
exit 0

""" ]
    }

    i2x {
      type: i2.xlarge
      image: ami-HVM-REPLACE-ME

      tags {
        owner: ${?USER}
      }
    }

    d2x {
      type: d2.xlarge
      image: ami-HVM-REPLACE-ME

      tags {
        owner: ${?USER}
      }
    }
}

#
# Configuration for Cloudera Manager. Cloudera Altus Director can use an existing instance
# or bootstrap everything from scratch for a new cluster
#

#
# Configuration for Cloudera Manager. Cloudera Altus Director can use an existing instance
# or bootstrap everything from scratch for a new cluster
#

cloudera-manager {

    instance: ${instances.m42x} {
        tags {
            application: "Cloudera Manager 5"
        }
    }

    #
    # Automatically activate 60-Day Cloudera Enterprise Trial
    #

    enableEnterpriseTrial: true

}

#
# Cluster description
#

cluster {

    # List the products and their versions that need to be installed.
    # These products must have a corresponding parcel in the parcelRepositories
    # configured above. The specified version will be used to find a suitable
    # parcel. Specifying a version that points to more than one parcel among
    # those available will result in a configuration error. Specify more granular
    # versions to avoid conflicts.

    products {
      CDH: 5
    }

    # This cluster is defined with three master nodes to allow us to allocate three
    # JOURNALNODE roles and three ZOOKEEPER SERVER roles.
    # Two master nodes have the NAMENODE and SECONDARYNAMENODE roles. Enabling HDFS HA
    # will replace the SECONDARYNAMENODE role with a NAMENODE role. Also FAILOVERCONTROLLER
    # roles will be colocated with the NAMENODEs.

    services: [HDFS, ZOOKEEPER]

    masters-1 {
      count: 1
      instance: ${instances.i2x} {
        tags {
          group: masters-1
        }
      }
      roles {
        HDFS: [NAMENODE, JOURNALNODE]
        ZOOKEEPER: [SERVER]
      }
    }

    masters-2 {
      count: 1
      instance: ${instances.i2x} {
        tags {
          group: masters-2
        }
      }
      roles {
        HDFS: [SECONDARYNAMENODE, JOURNALNODE]
        ZOOKEEPER: [SERVER]
      }
    }

    masters-3 {
      count: 1
      instance: ${instances.i2x} {
        tags {
          group: masters-3
        }
      }
      roles {
        HDFS: [JOURNALNODE]
        ZOOKEEPER: [SERVER]
      }
    }

    workers {
      count: 3
      instance: ${instances.d2x} {
        tags {
          group: workers
        }
      }
      roles {
        HDFS: [DATANODE]
      }
    }
}
